name: Deploy Vue site to Pages with Quasar

on:
  push:
    branches: ["master"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'yarn'

      - name: Install yarn
        run: npm install -g yarn

      - name: Install Quasar Framework
        run: npm install -g @quasar/cli

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: yarn --no-frozen-lockfile

      - name: Build vue project
        run: quasar build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist/spa

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
